[{"D:\\ReactCorso\\hiddenScoreTsx\\src\\index.js":"1","D:\\ReactCorso\\hiddenScoreTsx\\src\\App.tsx":"2","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Button.tsx":"3","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\HidenScore.tsx":"4","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Message.tsx":"5","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\NumberBox.tsx":"6","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Score.tsx":"7"},{"size":142,"mtime":1638978648000,"results":"8","hashOfConfig":"9"},{"size":2458,"mtime":1664461509904,"results":"10","hashOfConfig":"9"},{"size":307,"mtime":1664460624708,"results":"11","hashOfConfig":"9"},{"size":179,"mtime":1664457751833,"results":"12","hashOfConfig":"9"},{"size":217,"mtime":1664449560848,"results":"13","hashOfConfig":"9"},{"size":1449,"mtime":1664461555229,"results":"14","hashOfConfig":"9"},{"size":431,"mtime":1664460761954,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1k7jwhn",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"D:\\ReactCorso\\hiddenScoreTsx\\src\\index.js",[],["36","37"],"D:\\ReactCorso\\hiddenScoreTsx\\src\\App.tsx",["38","39"],"import React, { useState } from \"react\";\nimport NumberBox from \"./Components/NumberBox\";\nimport Button from \"./Components/Button\";\nimport HidenScore from \"./Components/HidenScore\";\nimport Message from \"./Components/Message\";\nimport Score from \"./Components/Score\";\nimport { useEffect } from \"react\";\nconst randomNum =  Math.floor(Math.random() * (21 - 1) + 1);\n\n\n\nconst App: React.FC = ()=> {\n   const [num,setNum] = useState<number | string>('');\n   const [visibleNum, setVisibleNum] = useState<string | number>('?')\n   const [score, setScore] = useState<number>(20);\n   const [highscore,setHighscore] = useState<number>(0)\n   const [msg, setMsg]  = useState<string>('iniziamo...');\n   const [disabled,setDisabled] = useState<boolean>(false)\n   const [randomNumber,setRandomNumber] = useState<number>(randomNum)\n  \n   useEffect(()=>{\n     if(score<=0){\n       setMsg('hai perso')\n     }\n   },[score])\n\n\n   const showMessage = (): void => {\n    if (+score <= 0){\n      setMsg('hai perso')\n    }\n     else if(num > randomNumber) {\n       setMsg(\"scegli un numero piÃ¹ piccolo\")\n     }else if(num < randomNumber){\n      setMsg(\"scegli un numero piu grande\")\n     }else if(num == randomNumber){\n       setMsg(\"bravo hai vinto\")\n       document.body.style.backgroundColor = 'green';\n     }\n   }\n \n   console.log(msg)\n   \n  const onAgainClick = (): void => {\n    setDisabled(false);\n    setRandomNumber(Math.floor(Math.random() * (21 - 1) + 1))\n    setNum(\"\");\n    setVisibleNum('?')\n    setScore(20)\n    setMsg('iniziamo...');\n    document.body.style.backgroundColor = 'black';\n    \n    \n  }\n  console.log(\"rnd\" +randomNumber)\n\n   //console.log(\"sssss\"+visibleNum)\n   \n   //console.log('siamo in app' + num)\n\n\n  return (\n    <div>\n      <header>\n        <h1>Guess My Number!</h1>\n        <p className=\"between\">(Between 1 and 20)</p>\n        <Button  click={onAgainClick} text={\"again\"} style={\"btn again\"} />\n        <HidenScore num={visibleNum}  />\n      </header>\n      <main>\n        <NumberBox  showMessage={showMessage}  setNum={setNum} setVisibleNum={setVisibleNum} num={num} setScore={setScore} \n        setHighscore={setHighscore}  score={score} highscore={highscore} setMsg={setMsg} randomNum={randomNumber} disabled={disabled} setDisabled={setDisabled}/>\n        <section className=\"right\">\n          <Message msg={msg} />\n           <Score score={score} highscore={highscore}/>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Button.tsx",[],["40","41"],"D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\HidenScore.tsx",[],"D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Message.tsx",["42"],"import { useState } from \"react\"\r\ntype MSGProps = {\r\n    msg: string\r\n}\r\n\r\nconst Message: React.FC<MSGProps> = ({msg}) => {\r\n\r\n\r\n\r\n    return(\r\n     <p className=\"message\">{msg}</p>\r\n    )\r\n}\r\n\r\nexport default Message","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\NumberBox.tsx",["43","44","45"],"import Button from \"./Button\";\r\nimport { useState } from \"react\";\r\n\r\ninterface NBProps {\r\n  showMessage:() => void\r\n  setNum:(n:number|string) => void\r\n  setVisibleNum:(n:number | string) => void\r\n  num:number | string\r\n  setScore:(n:number) => void\r\n  setHighscore:(n:number) => void\r\n  score: number\r\n  highscore:number\r\n  setMsg:(s:string) => void \r\n  randomNum: number\r\n  disabled:boolean\r\n  setDisabled:(b:boolean) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst NumberBox: React.FC<NBProps> = (props) => {\r\n \r\n  \r\n  \r\n   \r\n\r\n   const check = (): void =>{\r\n    \r\n    \r\n    if(props.num == props.randomNum ){\r\n      \r\n      props.setVisibleNum(props.num)\r\n      props.setHighscore(props.score)\r\n      props.setDisabled(true);\r\n    }else{\r\n      props.setScore(props.score-1);\r\n      if(props.score === 1) {\r\n        \r\n        props.setDisabled(true)\r\n        \r\n      }\r\n    }\r\n\r\n    \r\n    \r\n   }\r\n   \r\n  \r\n\r\n  const onChangeInput = (e:any) => {\r\n  \r\n   props.setNum(e.target.value)\r\n   \r\n  }\r\n  \r\n  const onCheckClick = (): void => {\r\n   if(props.num > 0 && props.num <21){\r\n     check();\r\n   props.showMessage();\r\n   }\r\n   else{\r\n     props.setMsg('numero non valido')\r\n   }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  return(\r\n    <section  className=\"left\">\r\n    <input value={props.num}  onChange={onChangeInput} type=\"number\" className=\"guess\" />\r\n    <Button  dsb={props.disabled} click={onCheckClick} text={\"Check!\"} style={'btn'}/>\r\n  </section> \r\n  )\r\n}\r\n\r\nexport default NumberBox;","D:\\ReactCorso\\hiddenScoreTsx\\src\\Components\\Score.tsx",["46"],"import { useState } from \"react\";\r\ninterface ScoreProps {\r\nscore:number\r\nhighscore:number\r\n}\r\n\r\nconst Score: React.FC<ScoreProps> = (props) => {\r\n    \r\n   return(\r\n    <>\r\n    <p className=\"label-score\">\r\n    ðŸ’¯ Score: <span className=\"score\">{props.score}</span>\r\n  </p>\r\n  <p className=\"label-highscore\">\r\n    ðŸ¥‡ Highscore: <span className=\"highscore\">{props.highscore}</span>\r\n  </p>\r\n   </>\r\n   )\r\n}\r\n\r\nexport default Score",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":36,"column":19,"nodeType":"53","messageId":"54","endLine":36,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":67,"column":54,"nodeType":"57","messageId":"58","endLine":67,"endColumn":73},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":31,"column":18,"nodeType":"53","messageId":"54","endLine":31,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":73,"column":72,"nodeType":"57","messageId":"58","endLine":73,"endColumn":85},{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":18},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]